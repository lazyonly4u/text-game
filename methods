namespace Methods
{
    public class Rooms
    {
        public string Name { get; set; }
        public string Description { get; set; }
        public List<string> Enemies { get; set; } = new List<string>();

        public Rooms(string Name, string Description)
        {
            this.Name = Name;
            this.Description = Description;
        }

        public void AddEnemy(string enemy)
        {
            Enemies.Add(enemy);
        }

        public static string room1()
        {
            Console.WriteLine("Beside the door is a sign that says: Level 1 - Fungus Among Us");
            Console.WriteLine("You open the door and see a dungeon room almost masks itself as a forest");
            Console.WriteLine("And suprisingly its filled with waking mushrooms");
            Console.WriteLine("Unfortunately you can't run back to the previous level due to this being the first");
            Console.ReadLine();

            Console.WriteLine("Name: Walking Mushroom | Health: 5 | Damage: 2 | Drops: 1 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }

        public static string room2()
        {
            Console.WriteLine("Congrats you've survived though Level 1!");
            Console.WriteLine("A door Suddenly appears with markings: Level 2 - Slime Schlime Time");
            Console.WriteLine("Through the door was an artificial looking cave dungeon with unknown plants mixed with moss which grew through the cracks");
            Console.WriteLine("And boom filled with Slime blobs, not the good type either");
            Console.WriteLine("Do you wish to run or fight?");
            Console.ReadLine();

            Console.WriteLine("Name: Slime Blob | Health: 10 | Damage: 8 | Drops: 2 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
        public static string room3()
        {
            Console.WriteLine("Congrats on surviving though Level 2! But will you be able to survive through this?");
            Console.WriteLine("A door not so suprisingly appears with markings: Level 3 - Nestflix & Chill");
            Console.WriteLine("You open the door and see a fancy dungeon room with pillars and suprisingly a few twigs fall down");
            Console.WriteLine("You look up and you find nests, some with a few eggs and some with GRIFFINS?!? They look at you glaringly and with bloodlust");
            Console.WriteLine("Do you wish to run or fight?");
            Console.ReadLine();

            Console.WriteLine("Name: Corrupted Griffin | Health: 25 | Damage: 20 | Drops: 10 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
        public static string room4()
        {
            Console.WriteLine("Wow you actually survived though Level 3? ...Well, try this!");
            Console.WriteLine("This time a fancy roman door appears(Very shinny): Level 4 - Pool of “Oops, You’re Drowning");
            Console.WriteLine("You open the door and see a huge pillared roman pool with entrance being the only thing as a boarder");
            Console.WriteLine("As you walk through the door, it slams LOUDLY");
            Console.WriteLine("You see a deep blue shadowy figure in the water, you squint in hopes of seeing more and the huge figure splashes out the water violently");
            Console.WriteLine("Congrats you have encounter a huge sea serpent with a glare of death(think you woke it up with the door)");
            Console.WriteLine("Do you wish to run or fight?");
            Console.ReadLine();

            Console.WriteLine("Name: Sea Serpent | Health: 40 | Damage: 35 | Drops: 15 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
        public static string room5()
        {
            Console.WriteLine("Oh Wow... I did not see that coming, heh since you passed Level 4 let me introduce you to Level 5!");
            Console.WriteLine("From a fancy door to a basic wooden door(don't judge a book by it cover...we had to rush this) on the now basic door is a sign that says: Level 5 - The Dino-Den of Doom");
            Console.WriteLine("You open the door and see a huge dungeon room almost masking itself as a forest with huge rocks bigger than you(yes i'm calling you short hehehe >D )");
            Console.WriteLine("In the center is a huge nest with dundunduunnn a Basilisk(bet you didn't guess that)");
            Console.WriteLine("Do you wish to run or fight?");
            Console.ReadLine();

            Console.WriteLine("Name: Basilisk | Health: 65 | Damage: 50 | Drops: 24 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
        public static string room6()
        {
            Console.WriteLine("Dawm Level 5... hmm ok ... HOW ABOUT THIS!?!");
            Console.WriteLine("A door made out a unfinished paper mache(That...was um... supposed to be done...)");
            Console.WriteLine("Beside the door is a paper sign that says: Level 6 - Rock ‘n’ Roar Hideout");
            Console.WriteLine("You open the door as residue of undried glue and paper sticks on your palm");
            Console.WriteLine("You see huge dungeon room almost masking itself as a cave with huge rocks bigger than you(yes I just copied and pasted whatcha gon do about it?)");
            Console.WriteLine("As you walk deeper you feel the atmosphere getting hotter and next thing you know right in front of you is a legandary Wyvern(hireing him was the second most expensive thing)");
            Console.WriteLine("Do you wish to run or fight?");
            Console.ReadLine();

            Console.WriteLine("Name: Wyvern | Health: 80 | Damage: 90 | Drops: 35 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
        public static string room7()
        {
            Console.WriteLine("I honestly have no words... But you definitely are NOT getting past this. (And yes, I’m totally petty about it.)");
            Console.WriteLine("Suddenly, a golden door materializes (the third most expensive thing in the dungeon) With letters encapsulated in diamond saying: Level 7 - The unknown.");
            Console.WriteLine("You open it to find a room overflowing with the most luxurious treasures you’ve ever heard of... or seen.");
            Console.WriteLine("At the center, a grand staircase of pure gold, draped in rich red carpet, leads up to a throne.");
            Console.WriteLine("And sitting on that throne is... what is THAT?! A... DITTO?!?! (Took almost all our budget)");
            Console.WriteLine("DUN DUN DUUUUNNNN! *dramatic sound effect*");
            Console.WriteLine("Do you dare to fight or run away screaming?");
            Console.ReadLine();

            Console.WriteLine("Name: Ditto | Health: 1000 | Damage: 500 | Drops: 0 coin");
            Console.ReadLine();
            Console.Clear();
            return "Room displayed";
        }
    }

    public class Shop
    {
        public static void DisplayShop()
        {
            Console.WriteLine("Welcome to the shop!");
            Console.WriteLine("Here are the items available for purchase:");

            Console.WriteLine("\r\nHealth:\r\n");

            Console.WriteLine("1. Buy Health Potion - 15 coins - Health + 10");
            Console.WriteLine("2. Weed - 5 coins - Health +5");

            Console.WriteLine("\r\nWeapons:");
            Console.WriteLine("Swords\r\n");

            Console.WriteLine("3. Long slender blade (espada bastarda) - 16 coins - Damage 15");
            Console.WriteLine("4.french thin pencil sword build (light one handed small sword) - 22 coins - damage 20");
            Console.WriteLine("5. Arab curved thin sword (Arabian scimitar sword) - 30 coins - Damage 35");

            Console.WriteLine("\r\nKnife/ Daggers:\r\n");

            Console.WriteLine("6. Curved knife (kukri) - 10 coins - Damage 10");

            Console.WriteLine("\r\nBow and Arrow:\r\n");

            Console.WriteLine("7. Long horseback bow (the Yumi bow) - 13 coins - Damage 15");
            Console.WriteLine("8. Strong blow but heavy (manchu bow) - 35 coins - Damage 35");

            Console.WriteLine("\r\n9. Exit Shop\r\n");
            // Add logic for purchasing items and updating inventory
        }
    }

    public class secretitems
    {
        public static void DisplaySecretItems()
        {
            Console.WriteLine("Secret Items:\r\n");
            Console.WriteLine("1. Magical girl wand damage: 1000");
            Console.WriteLine("2. Avatar powers damage: 880");
            Console.WriteLine("3. Lostvayne (seven deadly sins) damage: 500");

        }
    }

    public class Inventory
    {
        public static void DisplayInventory()
        {
            Console.WriteLine("Your Inventory:");
            // Display items in the inventory
            Console.WriteLine("1. Wooden Sword");
            Console.WriteLine("2. Health Potion");
            Console.WriteLine("3. Weed");
            Console.WriteLine("4. Curved Knife");
            Console.WriteLine("5. Long Slender Blade");
            Console.WriteLine("6. French Thin Pencil Sword");
            Console.WriteLine("7. Arab Curved Thin Sword");
            Console.WriteLine("8. Long Horseback Bow");
            Console.WriteLine("9. Strong Blow Bow");
            Console.WriteLine("10. Exit Inventory");
            // Add logic for using items or checking inventory
        }
    }
    public class Battle
    {
        public static void StartBattle()
        {
            Console.WriteLine("A wild Walking Mushroom appears!");
            Console.WriteLine("Choose your action:");
            Console.WriteLine("1. Attack");
            Console.WriteLine("2. Run");
            string action = Console.ReadLine();
            if (action == "1")
            {
                Console.WriteLine("You attack the Walking Mushroom with your Wooden Sword!");
                // Add logic for attack damage and enemy response
            }
            else if (action == "2")
            {
                Console.WriteLine("You attempt to run away from the Walking Mushroom!");
                // Add logic for running away and consequences
            }
            else
            {
                Console.WriteLine("Invalid action. The Walking Mushroom attacks you!");
                // Add logic for enemy attack
            }

            // Add logic for battle mechanics, player actions, and enemy responses
        }
    }
    public class Player
    {
        public static int Health = 10;
        public static int Coins = 0;
        public static string Weapon = "Wooden Sword";
        public static void DisplayStats()
        {
            Console.WriteLine($"Health: {Health}");
            Console.WriteLine($"Coins: {Coins}");
            Console.WriteLine($"Weapon: {Weapon}");

        }
    }

    public class Game
    {
        public static void StartGame()
        {
            Console.WriteLine("Welcome to the game!");
            Player.DisplayStats();

            // Array of room methods
            Func<string>[] rooms = {
            Rooms.room1,
            Rooms.room2,
            Rooms.room3,
            Rooms.room4,
            Rooms.room5,
            Rooms.room6,
            Rooms.room7
        };

            foreach (var room in rooms)
            {
                room();
                Battle.StartBattle();
            }

            Shop.DisplayShop();
            Inventory.DisplayInventory();
        }
    }

    public class CallRoom(int room)
    {
        public void CallTheRoom(int room)
        {
            switch (room)
            {
                case 1: Rooms.room1(); break;
                case 2: Rooms.room2(); break;
                case 3: Rooms.room3(); break;
                case 4: Rooms.room4(); break;
                case 5: Rooms.room5(); break;
                case 6: Rooms.room6(); break;
                case 7: Rooms.room7(); break;
            }
        }

    }


    public class CREDITS
        {
        public static void DisplayCredits()
        {
            Console.WriteLine("Honorable mentions");
            Console.WriteLine("\r\nGame Name\r\n");
            Console.WriteLine("You, a Sword, and Some Bad Decisions .");

            Console.WriteLine("The Quest for More Coins (Because Why Not)");

            Console.WriteLine("Coins, Cuts, and Confusion");

            Console.WriteLine("The Dungeon That’s Kinda Meh");

            Console.WriteLine("Swords, Spikes, and Silly Fights");

            Console.WriteLine("\r\nFinal Boss:\r\n");

            Console.WriteLine("Chi-Yu\r\nChien-Pao\r\n");

            Console.WriteLine("Scream Tail\r\nJigglypuff\r\n");

            Console.WriteLine("Snom\r\nYamask\r\n");

            Console.WriteLine("Magikarp\r\nGyarados\r\n");

            Console.WriteLine("Arceus\r\nDiancie\r\n");

            Console.WriteLine("Credits:\r\n");

            Console.Clear();

            Console.WriteLine("Game Idea: ME");
            Console.WriteLine("Game Design: ME");
            Console.WriteLine("Programming: ME");
            Console.WriteLine("\r\nGraphics: Visual Studio\r\n");

            Console.WriteLine("Special Thanks: Louise Christine Popp-Madsen, Zamzam Abdigani Ali, Sudden Motivation, Github, Copilot, My Sanity, My Brain Cells, Youtube, Spotify");
            Console.WriteLine("\r\nPlaytesting: ME\r\n");
            Console.WriteLine("Thanks for playing ig");
            Console.WriteLine("This game was created as a fun project and as an assignment");
            Console.WriteLine("Hope it was aight.");
            Console.WriteLine("If you have any feedback or suggestions, please DO NOT feel free to reach out.\r\n");

            Console.WriteLine("Press any key to return to the main menu.");
            Console.ReadKey();
        }
    }

    public class Exit
    {
        public static void ExitGame()
        {
            Console.WriteLine("Are you sure you want to exit? (yes/no)");
            string choice = Console.ReadLine();
            if (choice.ToLower() == "yes")
            {
                Console.WriteLine("Thanks for playing! Goodbye!");
                Environment.Exit(0);
            }
            else
            {
                Console.WriteLine("Returning to the game...");
            }
        }
    }

    public class Error
    {
        public static void DisplayError()
        {
            Console.WriteLine("An error has occurred. Please try again.");
        }
    }

    public class Help
    {
        public static void DisplayHelp()
        {
            Console.WriteLine("Help Menu:");
            Console.WriteLine("1. To navigate through the game, follow the prompts and enter your choices.");
            Console.WriteLine("2. To view your inventory, select the inventory option from the main menu.");
            Console.WriteLine("3. To visit the shop, select the shop option from the main menu.");
            Console.WriteLine("4. To check your stats, select the stats option from the main menu.");
            Console.WriteLine("5. To exit the game, select the exit option from the main menu.");
            Console.WriteLine("6. For any other assistance, please refer to the game documentation or contact support.");
        }
    }

    public class items
    {
        public static void DisplayItems()
        {
            Console.WriteLine("Available Items:");
            Console.WriteLine("1. Health Potion - Restores 10 health points.");
            Console.WriteLine("2. Weed - Restores 5 health points.");
            Console.WriteLine("3. Wooden Sword - Basic weapon with low damage.");
            Console.WriteLine("4. Curved Knife - Increases damage by 10 points.");
            Console.WriteLine("5. Long Slender Blade - Increases damage by 15 points.");
            Console.WriteLine("6. French Thin Pencil Sword - Increases damage by 20 points.");
            Console.WriteLine("7. Arab Curved Thin Sword - Increases damage by 35 points.");
            Console.WriteLine("8. Long Horseback Bow - Increases damage by 15 points.");
            Console.WriteLine("9. Strong Blow Bow - Increases damage by 35 points.");
        }
    }



}


