

using System.ComponentModel;

namespace Methods
{    


    public class Room
    {
        public string Name { get; set; }
        public string Description { get; set; }

        public Room(string Name, string Description)
        {
            this.Name = Name;
            this.Description = Description;
        }
        public void Enter()
        {
            Console.Clear();
            Console.WriteLine($"You enter: {Name}");
            Console.WriteLine(Description);

        }
    }


    public class Monster
    {
        public string Name { get; set; }
        public int Health { get; set; }
        public int Damage { get; set; }
        public int Coins { get; set; }

        public Monster(string Name, int Health, int Damage, int Drops)
        {
            this.Name = Name;
            this.Health = Health;
            this.Damage = Damage;
            this.Coins = Coins;
        }
    }


    public class Shop
    {
        public static void DisplayShop(List<weapons> shopWeapons)
        {
            Console.WriteLine("Welcome to the shop!");
            Console.WriteLine("Here are the items available for purchase:\n");

            for (int i = 0; i < shopWeapons.Count; i++)
            {
                var w = shopWeapons[i];
                Console.WriteLine($"{i + 1}. {w.Name} - {w.Cost} coins - Damage {w.Damage}");
            }
            Console.WriteLine($"{shopWeapons.Count + 1}. Exit Shop");

            Console.WriteLine("\nEnter the number of the weapon you want to buy, or exit:");
            string input = Console.ReadLine();
            if (int.TryParse(input, out int choice))
            {
                if (choice >= 1 && choice <= shopWeapons.Count)
                {
                    var selected = shopWeapons[choice - 1];
                    if (Player.Coins >= selected.Cost)
                    {
                        Player.Coins -= selected.Cost;
                        Player.Weapon = selected.Name;
                        Console.WriteLine($"You bought and equipped the {selected.Name}!");
                    }
                    else
                    {
                        Console.WriteLine("You don't have enough coins!");
                    }
                }
                else if (choice == shopWeapons.Count + 1)
                {
                    Console.WriteLine("Exiting shop.");
                }
                else
                {
                    Console.WriteLine("Invalid choice.");
                }
            }
            else
            {
                Console.WriteLine("Invalid input.");
            }
        }
    }

    public class weapons
    {
        public string Name { get; set; }
        public int Cost { get; set; }
        public int Damage { get; set; }

        public weapons(string Name, int Cost, int Damage)
        {
            this.Name = Name;
            this.Cost = Cost;
            this.Damage = Damage;

        }
    }

    public class secretitems
    {
        public static void DisplaySecretItems()
        {
            Console.WriteLine("Secret Items:\r\n");
            Console.WriteLine("1. Magical girl wand damage: 1000");
            Console.WriteLine("2. Avatar powers damage: 880");
            Console.WriteLine("3. Lostvayne (seven deadly sins) damage: 500");

        }
    }

    public class Inventory
    {
        public static void DisplayInventory()
        {
            Console.WriteLine("Your Inventory:");
            // Display items in the inventory
            Console.WriteLine("1. Wooden Sword");
            Console.WriteLine("2. Health Potion");
            Console.WriteLine("3. Weed");
            Console.WriteLine("4. Curved Knife");
            Console.WriteLine("5. Long Slender Blade");
            Console.WriteLine("6. French Thin Pencil Sword");
            Console.WriteLine("7. Arab Curved Thin Sword");
            Console.WriteLine("8. Long Horseback Bow");
            Console.WriteLine("9. Strong Blow Bow");
            Console.WriteLine("10. Exit Inventory");
            // Add logic for using items or checking inventory
        }
    }


    public class Combat
    {
        public static void Fight(Monster monster)
        {
            Console.WriteLine($"A wild {monster.Name} appears!");
            int monsterHealth = monster.Health;
            int playerAttack = GetPlayerAttack();

            while (monsterHealth > 0 && Player.Health > 0)
            {
                Console.WriteLine($"\nYour Health: {Player.Health} | {monster.Name} Health: {monsterHealth}");
                Console.WriteLine("Choose your action: (attack/run)");
                string action = Console.ReadLine().ToLower();

                if (action == "attack")
                {
                    monsterHealth -= playerAttack;
                    Console.WriteLine($"You attack with your {Player.Weapon} and deal {playerAttack} damage!");

                    if (monsterHealth <= 0)
                    {
                        Console.WriteLine($"You defeated the {monster.Name}!");
                        break;
                    }

                    Player.Health -= monster.Damage;
                    Console.WriteLine($"The {monster.Name} attacks you and deals {monster.Damage} damage!");
                }
                else if (action == "run")
                {
                    Console.WriteLine("You attempt to run away...");
                    // Add any run consequences here if you want
                    break;
                }
                else
                {
                    Console.WriteLine("Invalid action. The monster attacks you!");
                    Player.Health -= monster.Damage;
                }
            }

            if (Player.Health <= 0)
            {
                Console.WriteLine("You have been defeated!");
            }
        }

        private static int GetPlayerAttack()
        {
            // You can make this more dynamic if you want to use weapon objects
            return Player.Weapon switch
            {
                "Wooden Sword" => 5,
                "Long Slender Blade" => 15,
                "French Thin Pencil Sword" => 20,
                "Arab Curved Thin Sword" => 35,
                "Curved Knife" => 10,
                "Long Horseback Bow" => 15,
                "Strong Blow Bow" => 35,
                _ => 2 // default for fists or unknown weapon
            };
        }
    }


    public class Player
    {
        public static int Health { get; set; } = 50;
        public static int Coins { get; set; } = 10;
        public static string Weapon { get; set; } = "Wooden Sword";

        public static Room CurrentRoom { get; set; }
        public static void DisplayStats()
        {
            Console.WriteLine($"Health: {Health}");
            Console.WriteLine($"Coins: {Coins}");
            Console.WriteLine($"Weapon: {Weapon}");
        }
    }


    public class CREDITS
        {
        public static void DisplayCredits()
        {
            Console.WriteLine("Honorable mentions");
            Console.WriteLine("\r\nGame Name\r\n");
            Console.WriteLine("You, a Sword, and Some Bad Decisions .");

            Console.WriteLine("The Quest for More Coins (Because Why Not)");

            Console.WriteLine("Coins, Cuts, and Confusion");

            Console.WriteLine("The Dungeon Thatâ€™s Kinda Meh");

            Console.WriteLine("Swords, Spikes, and Silly Fights");

            Console.WriteLine("\r\nFinal Boss:\r\n");

            Console.WriteLine("Chi-Yu\r\nChien-Pao\r\n");

            Console.WriteLine("Scream Tail\r\nJigglypuff\r\n");

            Console.WriteLine("Snom\r\nYamask\r\n");

            Console.WriteLine("Magikarp\r\nGyarados\r\n");

            Console.WriteLine("Arceus\r\nDiancie\r\n");

            Console.WriteLine("Credits:\r\n");

            Console.Clear();

            Console.WriteLine("Game Idea: ME");
            Console.WriteLine("Game Design: ME");
            Console.WriteLine("Programming: ME");
            Console.WriteLine("\r\nGraphics: Visual Studio\r\n");

            Console.WriteLine("Special Thanks: Louise Christine Popp-Madsen, Zamzam Abdigani Ali, Sudden Motivation, Github, Copilot, My Sanity, My Brain Cells, Youtube, Spotify");
            Console.WriteLine("\r\nPlaytesting: ME\r\n");
            Console.WriteLine("Thanks for playing ig");
            Console.WriteLine("This game was created as a fun project and as an assignment");
            Console.WriteLine("Hope it was aight.");
            Console.WriteLine("If you have any feedback or suggestions, please DO NOT feel free to reach out.\r\n");

            Console.WriteLine("Press any key to return to the main menu.");
            Console.ReadKey();
        }
    }

    public class Exit
    {
        public static void ExitGame()
        {
            Console.WriteLine("Are you sure you want to exit? (yes/no)");
            string choice = Console.ReadLine();
            if (choice.ToLower() == "yes")
            {
                Console.WriteLine("Thanks for playing! Goodbye!");
                Environment.Exit(0);
            }
            else
            {
                Console.WriteLine("Returning to the game...");
            }
        }
    }


    public class items
    {
        public static void DisplayItems()
        {
            Console.WriteLine("Available Items:");
            Console.WriteLine("1. Health Potion - Restores 10 health points.");
            Console.WriteLine("2. Weed - Restores 5 health points.");
            Console.WriteLine("3. Wooden Sword - Basic weapon with low damage.");
            Console.WriteLine("4. Curved Knife - Increases damage by 10 points.");
            Console.WriteLine("5. Long Slender Blade - Increases damage by 15 points.");
            Console.WriteLine("6. French Thin Pencil Sword - Increases damage by 20 points.");
            Console.WriteLine("7. Arab Curved Thin Sword - Increases damage by 35 points.");
            Console.WriteLine("8. Long Horseback Bow - Increases damage by 15 points.");
            Console.WriteLine("9. Strong Blow Bow - Increases damage by 35 points.");
        }
    }



}


